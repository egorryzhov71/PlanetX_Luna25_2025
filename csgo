from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from bs4 import BeautifulSoup
import json
import time
import requests
import re

def resolve_steam64_id(steam_url):
    if '/profiles/' in steam_url:
        return steam_url.split('/profiles/')[1].strip('/')

    elif '/id/' in steam_url:
        custom_id = steam_url.split('/id/')[1].strip('/')
        xml_url = f'https://steamcommunity.com/id/{custom_id}?xml=1'
        response = requests.get(xml_url)
        if response.status_code != 200:
            print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å XML-–ø—Ä–æ—Ñ–∏–ª—å Steam.')
            return None

        match = re.search(r'<steamID64>(\d+)</steamID64>', response.text)
        if match:
            return match.group(1)
        else:
            print('‚ùå SteamID64 –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            return None
    else:
        print('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞.')
        return None

def get_tracker_stats_selenium(steam_id64):
    url = f'https://tracker.gg/cs2/profile/steam/{steam_id64}/overview'

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome –≤ headless-—Ä–µ–∂–∏–º–µ
    options = Options()
    options.add_argument('--headless')  # –±–µ–∑ –æ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞
    options.add_argument('--disable-gpu')
    options.add_argument('--no-sandbox')
    options.add_argument('--log-level=3')
    options.add_argument('--disable-dev-shm-usage')
    options.add_argument('--window-size=1920,1080')
    options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) Chrome/124.0.0.0 Safari/537.36")

    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)

    print(f'üåê –û—Ç–∫—Ä—ã–≤–∞—é –ø—Ä–æ—Ñ–∏–ª—å: {url}')
    driver.get(url)

    time.sleep(5)  # –¥–∞—ë–º —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è

    soup = BeautifulSoup(driver.page_source, 'html.parser')
    driver.quit()

    script_tag = soup.find('script', id="__NEXT_DATA__")
    if not script_tag:
        print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ JSON-–¥–∞–Ω–Ω—ã–µ.')
        return

    data = json.loads(script_tag.string)

    try:
        stats = data['props']['pageProps']['playerStats']['segments'][0]['stats']

        kd = stats['kDRatio']['displayValue']
        hs_percent = stats['headshotPct']['displayValue']
        matches = stats['matchesPlayed']['displayValue']

        print('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞:')
        print(f'üî´ K/D: {kd}')
        print(f'üéØ HS%: {hs_percent}')
        print(f'üìÅ –ú–∞—Ç—á–µ–π —Å—ã–≥—Ä–∞–Ω–æ: {matches}')

        return {
            'kdr': kd,
            'hs_percent': hs_percent,
            'matches': matches
        }

    except KeyError:
        print('‚ö†Ô∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Ç –∏–ª–∏ –µ—â—ë –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω.')

if __name__ == '__main__':
    steam_url = input('üîó –í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ Steam-–ø—Ä–æ—Ñ–∏–ª—å: ').strip()
    steam64 = resolve_steam64_id(steam_url)

    if steam64:
        get_tracker_stats_selenium(steam64)
